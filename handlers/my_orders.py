from aiogram import Router, F
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton
from database import get_orders_by_customer_telegram
from aiogram.fsm.context import FSMContext
from aiogram import Router, F
from aiogram.types import CallbackQuery
from aiogram.fsm.context import FSMContext
from states.review_states import ReviewCorrectionFSM
from database import get_order_by_id, get_specialist_by_section, update_order_status
from states.review_states import ReviewCorrectionFSM
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from dotenv import load_dotenv
import os
from aiogram import Bot
from aiogram.enums import ParseMode
from aiogram.client.default import DefaultBotProperties
from aiogram.types import FSInputFile
from tempfile import NamedTemporaryFile
load_dotenv()  # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è

# Initialize the PSD bot
psd_bot = Bot(
    token=os.getenv("DAED_BOT_TOKEN"),
    default=DefaultBotProperties(parse_mode=ParseMode.HTML)
)
router = Router()

@router.message(F.text == "üì¶ –ú–æ–∏ –∑–∞–∫–∞–∑—ã")
async def show_my_orders(message: Message, state: FSMContext):
    telegram_id = message.from_user.id
    orders = await get_orders_by_customer_telegram(telegram_id)

    if not orders:
        await message.answer("‚ùó –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∑–∞–∫–∞–∑–æ–≤.")
        return

    for order in orders:
        order_id = order["id"]
        status = order["status"]
        title = order["title"]

        caption = f"üìù <b>{title}</b>\nüìç –°—Ç–∞—Ç—É—Å: <i>{status}</i>"

        # –ö–Ω–æ–ø–∫–∞ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Å—Ç–∞—Ç—É—Å = –ü–æ–ª—É—á–µ–Ω–∏–µ –ò–†–î
        keyboard = None
        if status == "receive_ird":
            keyboard = InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="üìé –û—Ç–ø—Ä–∞–≤–∏—Ç—å –ò–†–î", callback_data=f"send_ird:{order_id}")]
            ])

        await message.answer(caption, reply_markup=keyboard, parse_mode="HTML")

@router.callback_query(F.data.startswith("send_ird:"))
async def handle_send_ird(callback: CallbackQuery, state: FSMContext):
    order_id = int(callback.data.split(":")[1])
    await state.set_state(ReviewCorrectionFSM.waiting_for_customer_zip)
    await state.update_data(order_id=order_id)

    await callback.message.answer("üì§ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ –∞—Ä—Ö–∏–≤ —Å –ò–†–î (–≤ —Ñ–æ—Ä–º–∞—Ç–µ ZIP)")
    await callback.answer("–û–∂–∏–¥–∞—é ZIP üìÅ")


@router.message(ReviewCorrectionFSM.waiting_for_customer_zip, F.document)
async def receive_customer_zip(message: Message, state: FSMContext):
    document = message.document

    if not document.file_name.lower().endswith(".zip"):
        await message.answer("‚ùó –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∞—Ä—Ö–∏–≤ –≤ —Ñ–æ—Ä–º–∞—Ç–µ .zip")
        return

    data = await state.get_data()
    order_id = data["order_id"]
    order = await get_order_by_id(order_id)

    # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª
    file = await message.bot.get_file(document.file_id)
    downloaded = await message.bot.download_file(file.file_path)

    # –í—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    with NamedTemporaryFile("wb+", delete=False, suffix=".zip") as tmp:
        tmp.write(downloaded.read())
        tmp.flush()

        # –ò–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏ –¥–ª—è –ì–ò–ü–∞
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="‚ùå –û—à–∏–±–∫–∞ –≤ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ö", callback_data=f"docs_error:{order_id}")],
            [InlineKeyboardButton(text="‚úÖ –ü—Ä–∏–Ω—è—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã", callback_data=f"docs_accept:{order_id}")]
        ])

        file_to_send = FSInputFile(tmp.name, filename=document.file_name)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ì–ò–ü—É
        await psd_bot.send_document(
            chat_id=order["gip_id"],
            document=file_to_send,
            caption=f"üì• –ü–æ–ª—É—á–µ–Ω ZIP-—Ñ–∞–π–ª –ò–†–î –æ—Ç –∑–∞–∫–∞–∑—á–∏–∫–∞ –ø–æ –∑–∞–∫–∞–∑—É: <b>{order['title']}</b>",
            reply_markup=keyboard,
            parse_mode="HTML"
        )

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É
        specialist = await get_specialist_by_section("—ç–ø")
        if specialist:
            await psd_bot.send_document(
                chat_id=specialist["telegram_id"],
                document=file_to_send,
                caption=f"üì• –ü–æ–ª—É—á–µ–Ω ZIP-—Ñ–∞–π–ª –ò–†–î –æ—Ç –∑–∞–∫–∞–∑—á–∏–∫–∞ –ø–æ –∑–∞–∫–∞–∑—É: <b>{order['title']}</b>",
                parse_mode="HTML"
            )

    await message.answer("‚úÖ –°–ø–∞—Å–∏–±–æ! ZIP-—Ñ–∞–π–ª –ø–µ—Ä–µ–¥–∞–Ω –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è–º.")
    await state.clear()

